<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:task="http://www.springframework.org/schema/task"
	
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/task
		http://www.springframework.org/schema/task/spring-task-3.2.xsd">

	<context:component-scan  base-package="com.eluon.vepc.mano">
		<context:include-filter type="aspectj" expression="com.eluon.vepc.mano..*Controller*" />
		<context:include-filter type="aspectj" expression="com.eluon.vepc.mano..*Service*" />
  		<context:include-filter type="aspectj" expression="com.eluon.vepc.mano..*DAO*" />
	</context:component-scan>

	<util:properties id="db" location="classpath:property/db.properties"/>
	<util:properties id="nova" location="classpath:property/nova.properties"/>
	<util:properties id="nfv" location="classpath:property/nfv.properties"/>
	<util:properties id="ui" location="classpath:property/ui.properties"/>
	
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="properties">
			<bean
				class="org.springmodules.commons.configuration.CommonsConfigurationFactoryBean">
				<property name="configurations">
					<list>
						<ref bean="configuration"/>
					</list>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="configuration"
		class="org.apache.commons.configuration.CompositeConfiguration">
		<constructor-arg>
			<list>
				<bean class="com.eluon.vepc.mano.common.Config">
					<constructor-arg type="java.lang.String">
						<value>xml/ManoConfig.xml</value>
					</constructor-arg>
				</bean>
			</list>
		</constructor-arg>
	</bean>

	<!-- USE DBCP -->
	<bean id="dataSourceSpied" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName"><value>#{db['jdbc.driverClassName']}</value></property>
		<property name="url"><value>#{db['jdbc.url']}</value></property>
		<property name="username"><value>#{db['jdbc.username']}</value></property>
		<property name="password"><value>#{db['jdbc.password']}</value></property>
		<property name="validationQuery" value="select 1"/>
	</bean>

	<!-- USE DBCP2 -->
	<bean id="dataSourceSpied2" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName"><value>#{nova['jdbc.driverClassName']}</value></property>
		<property name="url"><value>#{nova['jdbc.url']}</value></property>
		<property name="username"><value>#{nova['jdbc.username']}</value></property>
		<property name="password"><value>#{nova['jdbc.password']}</value></property>
		<property name="validationQuery" value="select 1"/>
	</bean>
	
	<!-- USE JNDI -->
	<!-- bean id="dataSourceSpied" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="java:comp/env/jdbc/ManoDataSource" />

	</bean-->

	<bean id="dataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
		<constructor-arg ref="dataSourceSpied" />
	</bean>

	<bean id="dataSource2" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
		<constructor-arg ref="dataSourceSpied2" />
	</bean>
	
	<!-- <bean id="dataSource3" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
		<constructor-arg ref="dataSourceSpied3" />
	</bean> -->

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <!-->property name="configLocation" value="${sqlMapConfig}"-->
        <property name="configLocation" value="#{db['sqlMapConfig']}"/>
        
    </bean>
    
    <bean id="sqlSessionFactory2" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource2"></property>
        <!-->property name="configLocation" value="${sqlMapConfig}"-->
        <property name="configLocation" value="#{nova['sqlMapConfig']}"/>
        
    </bean>
    
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg ref="sqlSessionFactory"></constructor-arg>
    </bean>
    
    <bean id="sqlSessionNova" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg ref="sqlSessionFactory2"></constructor-arg>
    </bean>
    
    <bean id="transactionManager"
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<task:executor id="executor" pool-size="5-10" queue-capacity="255" />
	<task:scheduler id="scheduler" pool-size="3" />
	<task:annotation-driven executor="executor" scheduler="scheduler" />
	
    <!-- RestTemplate -->
	<bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
		<constructor-arg>
			<bean class="org.springframework.http.client.HttpComponentsClientHttpRequestFactory">
				<property name="readTimeout" value="3000" />
				<property name="connectTimeout" value="3000" />
			</bean>
		</constructor-arg>
	</bean>

</beans>