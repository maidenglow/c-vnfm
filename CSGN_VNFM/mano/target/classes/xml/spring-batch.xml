<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="
        http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-3.0.xsd
        http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd">

	<bean id="jobRepository"
		class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="transactionManager" ref="transactionManager" />
		<property name="databaseType" value="mysql" />
		<property name="tablePrefix" value="BATCH_" />
		<property name="isolationLevelForCreate" value="ISOLATION_DEFAULT" />
	</bean>

	<bean id="jobLauncher"
		class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
	</bean>

	<bean id="jobExplorer"
		class="org.springframework.batch.core.explore.support.JobExplorerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="tablePrefix" value="BATCH_" />
	</bean>

	<bean id="jobOperator"
		class="org.springframework.batch.core.launch.support.SimpleJobOperator">
		<property name="jobRepository" ref="jobRepository"></property>
		<property name="jobRegistry" ref="jobRegistry"></property>
		<property name="jobExplorer" ref="jobExplorer"></property>
		<property name="jobLauncher" ref="jobLauncher"></property>
	</bean>

	<bean
		class="org.springframework.batch.core.configuration.support.JobRegistryBeanPostProcessor">
		<property name="jobRegistry" ref="jobRegistry" />
	</bean>

	<bean id="jobRegistry"
		class="org.springframework.batch.core.configuration.support.MapJobRegistry" />

	<bean id="jobFailureListener" class="com.eluon.vepc.mano.batch.tasks.JobFailureListener" />

	<bean id="updateSystemInfoTask" class="com.eluon.vepc.mano.batch.tasks.UpdateSystemInfoTask" />

	<bean id="updateInstanceInfoTask" class="com.eluon.vepc.mano.batch.tasks.UpdateInstanceInfoTask" />

	<batch:job id="updateSystemInfoJob">
		<batch:step id="updateSystemInfoJobStep">
			<tasklet ref="updateSystemInfoTask" />
		</batch:step>
	</batch:job>

	<batch:job id="updateInstanceInfoJob">
		<batch:step id="updateInstanceInfoJobStep">
			<tasklet ref="updateInstanceInfoTask" />
		</batch:step>
	</batch:job>

	<bean id="updateSystemInfoJobDetail"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass"
			value="com.eluon.vepc.mano.batch.tasks.JobLauncherDetails" />
		<property name="group" value="quartz-batch" />
		<property name="jobDataAsMap">
			<map>
				<entry key="jobName" value="updateSystemInfoJob" />
				<entry key="jobLocator" value-ref="jobRegistry" />
				<entry key="jobLauncher" value-ref="jobLauncher" />
				<entry key="param1" value="test1" />
			</map>
		</property>
	</bean>

	<bean id="updateSystemInfoJobTrigger"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="updateSystemInfoJobDetail" />
		<property name="cronExpression" value="*/10 * * * * ?" />
	</bean>

	<bean id="schedulerFactory"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="updateSystemInfoJobTrigger" />
				<!-- ref bean="updateInstanceInfoJobTrigger" / -->
			</list>
		</property>
	</bean>

</beans>