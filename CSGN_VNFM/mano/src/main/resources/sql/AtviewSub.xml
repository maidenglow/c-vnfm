<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="AtviewSub">

	<!-- constituent -->
	<select id="getConstituent" parameterType="hashmap" resultType="java.util.LinkedHashMap">
		select 
			a.vdu_id, a.instance_cnt, c.vnfc_no, c.vnfc_id
		from 
			nfv_constituent_tab as a, 
			(select vnfc_ref.vnfc_ref_no, vnfc_tab.vnfc_no, vnfc_tab.vnfc_id, vnfc_tab.connection_ref_no from nfv_vnfc_ref as vnfc_ref 
			inner join nfv_vnfc_tab as vnfc_tab on vnfc_ref.vnfc_no = vnfc_tab.vnfc_no) as c
		where 
			a.vnfc_ref_no = c.vnfc_ref_no
			and a.vdu_id = #{id}
	</select>
	
	<select id="getConstituentOne" parameterType="hashmap" resultType="java.util.LinkedHashMap" >			
		select
			cstt_no, vdu_id, instance_cnt, vnfc_ref_no
		from 
		 	nfv_constituent_tab 
		where 
			vdu_id = #{id}
	</select>
	
	<select id="passableDeleteConstituent" parameterType="hashmap" resultType="int">
		select
		    count(*)
		from 
		    nfv_constituent_tab a, nfv_constituent_ref b
		where 
		    a.cstt_no = b.cstt_no
		    and a.cstt_no = #{cstt_no}
	</select>
	
	<insert id="postConstituent" parameterType="hashmap">
		 insert into 
		 	nfv_constituent_tab( cstt_no, vdu_id, instance_cnt, vnfc_ref_no ) 
		 values( #{cstt_no}, #{id}, #{instance_cnt}, #{vnfc_ref_no} )
	</insert>
	
	<insert id="postVnfcRef" parameterType="hashmap">
		 insert into 
		 	nfv_vnfc_ref( vnfc_ref_no, vnfc_no ) 
		 values( #{vnfc_ref_no}, #{vnfc_no} )
	</insert>
	
	
	<update id="putConstituent" parameterType="hashmap">
		update 
			nfv_constituent_tab 
		set 
			instance_cnt = #{instance_cnt} 
		where 
			vdu_id = #{id}
	</update>
	
	
	<delete id="deleteConstituent" parameterType="hashmap">
		delete 
		from 
			nfv_constituent_tab
		where 
			vdu_id = #{id}
	</delete>
	
	<delete id="deleteVnfcRef" parameterType="hashmap">
		delete 
		from 
			nfv_vnfc_ref
		where 
			vnfc_ref_no = #{vnfc_ref_no}
	</delete>	
	
	
	<!-- nfvic -->
	<select id="getNfvic" parameterType="hashmap" resultType="java.util.LinkedHashMap" >
		SELECT a.nfvidc_no,
		     a.nfvidc_id,
		     a.mnt_ref_no,
		     a.func_ref_no,
		     b.mnt_no as mnt_no,
		     b.nfvid_mnt_item as mnt_item,
		     'NULL' as function_no,
		     'NULL' as ver_item,
		     'NULL' as ver_id
		FROM nfv_nfvidc_tab as a,
		     (SELECT mnt_ref.mnt_ref_no,
		            mnt_ref.mnt_no,
		            mnt_tab.item as nfvid_mnt_item
		       FROM nfv_monitoring_ref as mnt_ref
		          INNER JOIN nfv_monitoring_tab as mnt_tab
		              ON mnt_ref.mnt_no = mnt_tab.mnt_no
		     ) as b
		WHERE a.mnt_ref_no = b.mnt_ref_no
		and a.nfvidc_id = #{id}
		    UNION ALL
		SELECT a.nfvidc_no,
		     a.nfvidc_id,
		     a.mnt_ref_no,
		     a.func_ref_no,
		     'NULL' as mnt_no,
		     'NULL' as mnt_item,
		     b.function_no,
		     b.ver_item,
		     b.ver_id
		FROM nfv_nfvidc_tab as a,
		     (SELECT nfv_function_ref.function_ref_no,
		            nfv_function_ref.function_no,
		            vnf_tab.ver_item,
		            vnf_tab.ver_id
		       FROM nfv_function_ref,
		            (SELECT nfv_state_tab.state_no,
		                   nfv_state_tab.item as ver_item,
		                   nfv_version_tab.id as ver_id
		              FROM nfv_state_tab
		                 INNER JOIN nfv_version_tab
		                     ON nfv_state_tab.version_no = nfv_version_tab.version_no
		            ) as vnf_tab
		      WHERE nfv_function_ref.function_no = vnf_tab.state_no
		     ) as b
		WHERE a.func_ref_no = b.function_ref_no
		and a.nfvidc_id = #{id}	
	</select>
	
	<select id="getNfvicOne" parameterType="hashmap" resultType="java.util.LinkedHashMap" >			
		select
			nfvidc_no, nfvidc_id, mnt_ref_no, func_ref_no
		from 
		 	nfv_nfvidc_tab 
		where 
			nfvidc_id = #{id}
	</select>
	
	<insert id="postNfvic" parameterType="hashmap">
		 insert into 
		 	nfv_nfvidc_tab( nfvidc_no, nfvidc_id, mnt_ref_no, func_ref_no ) 
		 values( #{nfvidc_no}, #{id}, #{mnt_ref_no}, #{func_ref_no} )
	</insert>
	
	<insert id="postMntRef" parameterType="hashmap">
		 insert into 
		 	nfv_monitoring_ref( mnt_ref_no, mnt_no ) 
		 values( #{mnt_ref_no}, #{mnt_no} )
	</insert>
	
	<insert id="postFuncRef" parameterType="hashmap">
		 insert into 
		 	nfv_function_ref( function_ref_no, function_no ) 
		 values( #{func_ref_no}, #{func_no} )
	</insert>
	
	<delete id="deleteNfvic" parameterType="hashmap">
		delete 
		from 
			nfv_nfvidc_tab
		where 
			nfvidc_id = #{id}
	</delete>	
	
	<delete id="deleteMntRef" parameterType="hashmap">
		delete 
		from 
			nfv_monitoring_ref
		where 
			mnt_ref_no = #{mnt_ref_no}
	</delete>	
	
	<delete id="deleteFuncRef" parameterType="hashmap">
		delete 
		from 
			nfv_function_ref
		where 
			function_ref_no = #{func_ref_no}
	</delete>
	
	<!-- cvnf(constituent vnf) -->	
	<select id="getCvnf" parameterType="hashmap" resultType="java.util.LinkedHashMap" >
		select 
			version_tab.version_no, version_tab.id, version_tab.vendor, version_tab.version, convnf_tab.convnf_no, convnf_tab.flavour_nm, 
			convnf_tab.rddc_model, convnf_tab.affinity, convnf_tab.vnf_cap, convnf_tab.vnf_instance_cnt
		from
		    nfv_version_tab as version_tab inner join nfv_convnf_tab as convnf_tab on convnf_tab.version_no = version_tab.version_no
		where convnf_tab.flavour_nm = #{flavour_nm} AND version_tab.id = #{vnf_id}
	</select>
	
	<select id="getCvnfOne" parameterType="hashmap" resultType="java.util.LinkedHashMap" >			
		select 
			convnf_tab.convnf_no, convnf_tab.flavour_nm, convnf_tab.rddc_model, convnf_tab.affinity, convnf_tab.vnf_cap, convnf_tab.vnf_instance_cnt
		from
		    nfv_version_tab as version_tab inner join nfv_convnf_tab as convnf_tab on convnf_tab.version_no = version_tab.version_no
		where convnf_tab.flavour_nm = #{flavour_nm} and version_tab.id = #{vnf_id}
	</select>	
	
	<select id="getCvnfCount" parameterType="hashmap" resultType="int" >
		select
			count(*)
		from 
			nfv_convnf_tab a, nfv_version_tab b
		where
			a.version_no = b.version_no
			<if test="cvnf_id != null">
			and a.flavour_nm = #{flavour_nm} and b.id = #{vnf_id}
			</if>
	</select>
	
	<select id="getVersion" parameterType="hashmap" resultType="java.util.LinkedHashMap" >
		select 
			version_no, id, vendor, version 
		from
		    nfv_version_tab 
		where id = #{vnf_id}
	</select>
	
	<select id="passableDeleteCvnf" parameterType="hashmap" resultType="int">
		select
		    count(*)
		from 
		    nfv_convnf_tab a, nfv_convnf_ref b
		where 
		    a.convnf_no = b.convnf_no
		    and a.convnf_no = #{convnf_no}
	</select>
	
	<insert id="postCvnf" parameterType="hashmap">
		 insert into 
		 	nfv_convnf_tab( convnf_no, version_no, flavour_nm, rddc_model, affinity, vnf_cap, vnf_instance_cnt ) 
		 values( #{convnf_no}, #{version_no}, #{flavour_nm}, #{rddc_model}, #{affinity}, #{vnf_cap}, #{vnf_instance_cnt} )
	</insert>
	
	<update id="putCvnf" parameterType="hashmap">
		update 
			nfv_convnf_tab 
		set 
			rddc_model = #{rddc_model}, 
			affinity = #{affinity}, 
			vnf_cap = #{vnf_cap}, 
			vnf_instance_cnt = #{vnf_instance_cnt}    
		where 
			convnf_no = #{convnf_no} 
	</update>
	
	<delete id="deleteCvnf" parameterType="hashmap">
		delete 
		from 
			nfv_convnf_tab 
		where 
			convnf_no = #{convnf_no}
	</delete>
	
</mapper>
